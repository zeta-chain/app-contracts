/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZetaInteractorMock,
  ZetaInteractorMockInterface,
} from "../../../contracts/testing/ZetaInteractorMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "zetaConnectorAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDestinationChainId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidZetaMessageCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidZetaRevertCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "connector",
    outputs: [
      {
        internalType: "contract ZetaConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "interactorsByChainId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "zetaTxSenderAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "sourceChainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "destinationAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "zetaValue",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct ZetaInterfaces.ZetaMessage",
        name: "zetaMessage",
        type: "tuple",
      },
    ],
    name: "onZetaMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "zetaTxSenderAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sourceChainId",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "destinationAddress",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "remainingZetaValue",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
        ],
        internalType: "struct ZetaInterfaces.ZetaRevert",
        name: "zetaRevert",
        type: "tuple",
      },
    ],
    name: "onZetaRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "contractAddress",
        type: "bytes",
      },
    ],
    name: "setInteractorByChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200112538038062001125833981810160405281019062000037919062000182565b80620000586200004c6200009f60201b60201c565b620000a760201b60201c565b46608081815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001ed565b92915050565b6000602082840312156200019b576200019a620001e8565b5b6000620001ab848285016200016b565b91505092915050565b6000620001c182620001c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001f881620001b4565b81146200020457600080fd5b50565b60805160a05160601c610eee62000237600039600081816104b801526105fd0152600061032b0152610eee6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461011157806383f3084f1461011b5780638da5cb5b14610139578063f2fde38b1461015757610088565b80632618143f1461008d5780633749c51a146100bd5780633ff0693c146100d95780634fd3f7d7146100f5575b600080fd5b6100a760048036038101906100a29190610979565b610173565b6040516100b49190610b92565b60405180910390f35b6100d760048036038101906100d291906108e7565b610213565b005b6100f360048036038101906100ee9190610930565b6102a9565b005b61010f600480360381019061010a91906109a6565b61038a565b005b61011961042e565b005b6101236104b6565b6040516101309190610bb4565b60405180910390f35b6101416104da565b60405161014e9190610b77565b60405180910390f35b610171600480360381019061016c91906108ba565b610503565b005b6001602052806000526040600020600091509050805461019290610d73565b80601f01602080910402602001604051908101604052809291908181526020018280546101be90610d73565b801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b505050505081565b8061021c6105fb565b60016000826020013581526020019081526020016000206040516102409190610b60565b60405180910390208180600001906102589190610c0f565b604051610266929190610b47565b6040518091039020146102a5576040517fb473eb0a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b806102b26105fb565b3073ffffffffffffffffffffffffffffffffffffffff168160000160208101906102dc91906108ba565b73ffffffffffffffffffffffffffffffffffffffff1614610329576040517fc03e9c3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000816020013514610386576040517fc03e9c3f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b61039261068d565b73ffffffffffffffffffffffffffffffffffffffff166103b06104da565b73ffffffffffffffffffffffffffffffffffffffff1614610406576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fd90610bef565b60405180910390fd5b8181600160008681526020019081526020016000209190610428929190610759565b50505050565b61043661068d565b73ffffffffffffffffffffffffffffffffffffffff166104546104da565b73ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a190610bef565b60405180910390fd5b6104b46000610695565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050b61068d565b73ffffffffffffffffffffffffffffffffffffffff166105296104da565b73ffffffffffffffffffffffffffffffffffffffff161461057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610bef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690610bcf565b60405180910390fd5b6105f881610695565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068b57336040517fcbd9d2e00000000000000000000000000000000000000000000000000000000081526004016106829190610b77565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461076590610d73565b90600052602060002090601f01602090048101928261078757600085556107ce565b82601f106107a057803560ff19168380011785556107ce565b828001600101855582156107ce579182015b828111156107cd5782358255916020019190600101906107b2565b5b5090506107db91906107df565b5090565b5b808211156107f85760008160009055506001016107e0565b5090565b60008135905061080b81610e8a565b92915050565b60008083601f84011261082757610826610dd9565b5b8235905067ffffffffffffffff81111561084457610843610dd4565b5b6020830191508360018202830111156108605761085f610ded565b5b9250929050565b600060a0828403121561087d5761087c610de3565b5b81905092915050565b600060c0828403121561089c5761089b610de3565b5b81905092915050565b6000813590506108b481610ea1565b92915050565b6000602082840312156108d0576108cf610dfc565b5b60006108de848285016107fc565b91505092915050565b6000602082840312156108fd576108fc610dfc565b5b600082013567ffffffffffffffff81111561091b5761091a610df7565b5b61092784828501610867565b91505092915050565b60006020828403121561094657610945610dfc565b5b600082013567ffffffffffffffff81111561096457610963610df7565b5b61097084828501610886565b91505092915050565b60006020828403121561098f5761098e610dfc565b5b600061099d848285016108a5565b91505092915050565b6000806000604084860312156109bf576109be610dfc565b5b60006109cd868287016108a5565b935050602084013567ffffffffffffffff8111156109ee576109ed610df7565b5b6109fa86828701610811565b92509250509250925092565b610a0f81610cbf565b82525050565b6000610a218385610ca3565b9350610a2e838584610d31565b82840190509392505050565b6000610a4582610c87565b610a4f8185610c92565b9350610a5f818560208601610d40565b610a6881610e01565b840191505092915050565b60008154610a8081610d73565b610a8a8186610ca3565b94506001821660008114610aa55760018114610ab657610ae9565b60ff19831686528186019350610ae9565b610abf85610c72565b60005b83811015610ae157815481890152600182019150602081019050610ac2565b838801955050505b50505092915050565b610afb81610cfb565b82525050565b6000610b0e602683610cae565b9150610b1982610e12565b604082019050919050565b6000610b31602083610cae565b9150610b3c82610e61565b602082019050919050565b6000610b54828486610a15565b91508190509392505050565b6000610b6c8284610a73565b915081905092915050565b6000602082019050610b8c6000830184610a06565b92915050565b60006020820190508181036000830152610bac8184610a3a565b905092915050565b6000602082019050610bc96000830184610af2565b92915050565b60006020820190508181036000830152610be881610b01565b9050919050565b60006020820190508181036000830152610c0881610b24565b9050919050565b60008083356001602003843603038112610c2c57610c2b610de8565b5b80840192508235915067ffffffffffffffff821115610c4e57610c4d610dde565b5b602083019250600182023603831315610c6a57610c69610df2565b5b509250929050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610cca82610cd1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d0682610d0d565b9050919050565b6000610d1882610d1f565b9050919050565b6000610d2a82610cd1565b9050919050565b82818337600083830152505050565b60005b83811015610d5e578082015181840152602081019050610d43565b83811115610d6d576000848401525b50505050565b60006002820490506001821680610d8b57607f821691505b60208210811415610d9f57610d9e610da5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e9381610cbf565b8114610e9e57600080fd5b50565b610eaa81610cf1565b8114610eb557600080fd5b5056fea264697066735822122028d663348b87973bc380b1f3d98c4ef89817d84be8e00d9c2b177f549b9b710064736f6c63430008070033";

type ZetaInteractorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaInteractorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaInteractorMock__factory extends ContractFactory {
  constructor(...args: ZetaInteractorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    zetaConnectorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZetaInteractorMock> {
    return super.deploy(
      zetaConnectorAddress,
      overrides || {}
    ) as Promise<ZetaInteractorMock>;
  }
  override getDeployTransaction(
    zetaConnectorAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(zetaConnectorAddress, overrides || {});
  }
  override attach(address: string): ZetaInteractorMock {
    return super.attach(address) as ZetaInteractorMock;
  }
  override connect(signer: Signer): ZetaInteractorMock__factory {
    return super.connect(signer) as ZetaInteractorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaInteractorMockInterface {
    return new utils.Interface(_abi) as ZetaInteractorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZetaInteractorMock {
    return new Contract(address, _abi, signerOrProvider) as ZetaInteractorMock;
  }
}
