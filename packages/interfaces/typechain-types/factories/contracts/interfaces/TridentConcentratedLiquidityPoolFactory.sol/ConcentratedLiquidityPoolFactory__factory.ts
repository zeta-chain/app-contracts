/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ConcentratedLiquidityPoolFactory,
  ConcentratedLiquidityPoolFactoryInterface,
} from "../../../../contracts/interfaces/TridentConcentratedLiquidityPoolFactory.sol/ConcentratedLiquidityPoolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getPools",
    outputs: [
      {
        internalType: "address[]",
        name: "pairPools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ConcentratedLiquidityPoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ConcentratedLiquidityPoolFactoryInterface {
    return new utils.Interface(
      _abi
    ) as ConcentratedLiquidityPoolFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConcentratedLiquidityPoolFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConcentratedLiquidityPoolFactory;
  }
}
